// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/domain/contract.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	big "math/big"
	reflect "reflect"

	common "github.com/ethereum/go-ethereum/common"
	types "github.com/ethereum/go-ethereum/core/types"
	gomock "github.com/golang/mock/gomock"
)

// MockEthereumClient is a mock of EthereumClient interface.
type MockEthereumClient struct {
	ctrl     *gomock.Controller
	recorder *MockEthereumClientMockRecorder
}

// MockEthereumClientMockRecorder is the mock recorder for MockEthereumClient.
type MockEthereumClientMockRecorder struct {
	mock *MockEthereumClient
}

// NewMockEthereumClient creates a new mock instance.
func NewMockEthereumClient(ctrl *gomock.Controller) *MockEthereumClient {
	mock := &MockEthereumClient{ctrl: ctrl}
	mock.recorder = &MockEthereumClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEthereumClient) EXPECT() *MockEthereumClientMockRecorder {
	return m.recorder
}

// BalanceAt mocks base method.
func (m *MockEthereumClient) BalanceAt(ctx context.Context, account common.Address, blockNumber *big.Int) (*big.Int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BalanceAt", ctx, account, blockNumber)
	ret0, _ := ret[0].(*big.Int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BalanceAt indicates an expected call of BalanceAt.
func (mr *MockEthereumClientMockRecorder) BalanceAt(ctx, account, blockNumber interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BalanceAt", reflect.TypeOf((*MockEthereumClient)(nil).BalanceAt), ctx, account, blockNumber)
}

// SendTransaction mocks base method.
func (m *MockEthereumClient) SendTransaction(ctx context.Context, tx *types.Transaction) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendTransaction", ctx, tx)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendTransaction indicates an expected call of SendTransaction.
func (mr *MockEthereumClientMockRecorder) SendTransaction(ctx, tx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendTransaction", reflect.TypeOf((*MockEthereumClient)(nil).SendTransaction), ctx, tx)
}
